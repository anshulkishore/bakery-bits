import java.awt.Color;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * cupcake.java
 *
 * Created on Jan 30, 2013, 8:41:45 AM
 */

/**
 *
 * @author LAB1
 */
public class cupcake extends javax.swing.JFrame {

    /** Creates new form cupcake */
    public cupcake() {
        initComponents();
        getContentPane().setBackground(Color.decode("#fdffcc"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tcupcake = new javax.swing.JTable();
        bshowall = new javax.swing.JButton();
        cl = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cprange = new javax.swing.JComboBox();
        cpvalue = new javax.swing.JTextField();
        bselcupcake = new javax.swing.JButton();
        border = new javax.swing.JButton();
        cpic = new javax.swing.JLabel();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CUPCAKES !!");

        jLabel1.setFont(new java.awt.Font("Felix Titling", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cupcake Menu !!");

        tcupcake.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CID", "Flavour", "Price_per_piece"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tcupcake.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tcupcakeMouseClicked(evt);
            }
        });
        tcupcake.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tcupcakeKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tcupcake);

        bshowall.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        bshowall.setText("Show All Cupcakes");
        bshowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bshowallActionPerformed(evt);
            }
        });

        cl.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        cl.setText("Clear");
        cl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Price Range"), "Price Range", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("AR JULIAN", 0, 12))); // NOI18N

        cprange.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", ">", "<=", ">=", "=" }));

        bselcupcake.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        bselcupcake.setText("SELECTION");
        bselcupcake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bselcupcakeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cprange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bselcupcake, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cpvalue, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cprange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpvalue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bselcupcake)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        border.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        border.setText("ORDER");
        border.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borderActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("AR JULIAN", 0, 14)); // NOI18N
        back.setText("BACK TO MAIN PAGE");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cpic, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bshowall)
                        .addGap(18, 18, 18)
                        .addComponent(cl)
                        .addGap(131, 131, 131)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(border)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cl)
                            .addComponent(bshowall))
                        .addGap(28, 28, 28)
                        .addComponent(cpic, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(border)
                        .addGap(50, 50, 50)
                        .addComponent(back)
                        .addGap(63, 63, 63))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bshowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bshowallActionPerformed
cl.doClick();
        DefaultTableModel dm=(DefaultTableModel)tcupcake.getModel();
try{
    Class.forName("java.sql.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3305/project","root","tiger");
    //System.out.println("connected");
    Statement s1=con.createStatement();
    String sql="Select * from Cupcake;";
    ResultSet r1=s1.executeQuery(sql);
    String  id=null,name=null;
    int price=0;
    while(r1.next())
    {
        id=r1.getString(1);
        name =r1.getString(2);
        price=r1.getInt(3);
        dm.addRow(new Object[]{id,name,price});
    }
}
catch(Exception ex){
    System.out.println(ex);
}  
tcupcake.changeSelection(0, 0, false, false);
        int j=tcupcake.getSelectedRow();
        //System.out.print("  "+j);
        String pic=(String) dm.getValueAt(j, 0);
        if(pic.equals("cp1"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/van.jpg")));
        
        tcupcake.requestFocus();
        tcupcake.editCellAt(0,1);
// TODO add your handling code here:
    }//GEN-LAST:event_bshowallActionPerformed

    private void clActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clActionPerformed
 DefaultTableModel dm=(DefaultTableModel)tcupcake.getModel();
 int rc=dm.getRowCount();
 for(int i=rc-1;i>=0;i--)
     dm.removeRow(i);   
 cpic.setIcon(null);  
// TODO add your handling code here:
    }//GEN-LAST:event_clActionPerformed

    private void bselcupcakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bselcupcakeActionPerformed
cl.doClick();
        DefaultTableModel dm=(DefaultTableModel)tcupcake.getModel();
try{
    Class.forName("java.sql.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3305/project","root","tiger");
    //System.out.println("connected");
    Statement s1=con.createStatement();
    String sym=(String)cprange.getSelectedItem();

    int Val=Integer.parseInt(cpvalue.getText());
    String sql="Select * from cupcake where price_per_piece"+sym+Val+";";
    ResultSet r1=s1.executeQuery(sql);
    String  id=null,name=null;
    int price=0;
    while(r1.next())
    {
        id=r1.getString(1);
        name =r1.getString(2);
        price=r1.getInt(3);
        dm.addRow(new Object[]{id,name,price});
    }


}
catch(Exception ex)
{
    System.out.println(ex);
}

tcupcake.changeSelection(0, 0, false, false);
int j=tcupcake.getSelectedRow();
//System.out.print("  "+j);
String pic=(String) dm.getValueAt(j, 0);
        if(pic.equals("cp7"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/ofash.JPG")));
        if(pic.equals("cp5"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/peanut.JPG")));
        if(pic.equals("cp1"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/van.jpg")));
        if(pic.equals("cp3"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/fudbr.JPG")));
        if(pic.equals("cp6"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/Lemon.jpg")));
        if(pic.equals("cp4"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/bitter.JPG")));
        if(pic.equals("cp2"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/b n w.jpg")));
        
tcupcake.requestFocus();
tcupcake.editCellAt(0,1);
// TODO add your handling code here:
    }//GEN-LAST:event_bselcupcakeActionPerformed

    private void borderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borderActionPerformed
DefaultTableModel dm1= (DefaultTableModel)tcupcake.getModel();
        int i=tcupcake.getSelectedRow();
        //System.out.print("  "+i);
        String name=(String) dm1.getValueAt(i, 1);
        Object pr=dm1.getValueAt(i,2);
        new bill(name,pr).setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_borderActionPerformed

    private void tcupcakeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tcupcakeMouseClicked
        DefaultTableModel dm1= (DefaultTableModel)tcupcake.getModel();
        int j=tcupcake.getSelectedRow();
        //System.out.print("  "+j);
        String pic=(String) dm1.getValueAt(j, 0);
        if(pic.equals("cp7"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/ofash.JPG")));
        if(pic.equals("cp5"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/peanut.JPG")));
        if(pic.equals("cp1"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/van.jpg")));
        if(pic.equals("cp3"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/fudbr.JPG")));
        if(pic.equals("cp6"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/Lemon.jpg")));
        if(pic.equals("cp4"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/bitter.JPG")));
        if(pic.equals("cp2"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/b n w.jpg")));        // TODO add your handling code here:
    }//GEN-LAST:event_tcupcakeMouseClicked

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void tcupcakeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tcupcakeKeyReleased
        DefaultTableModel dm1= (DefaultTableModel)tcupcake.getModel();
        int j=tcupcake.getSelectedRow();
        //System.out.print("  "+j);
        String pic=(String) dm1.getValueAt(j, 0);
        if(pic.equals("cp7"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/ofash.JPG")));
        if(pic.equals("cp5"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/peanut.JPG")));
        if(pic.equals("cp1"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/van.jpg")));
        if(pic.equals("cp3"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/fudbr.JPG")));
        if(pic.equals("cp6"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/Lemon.jpg")));
        if(pic.equals("cp4"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/bitter.JPG")));
        if(pic.equals("cp2"))
            cpic.setIcon(new ImageIcon(getClass().getResource("/b n w.jpg")));         // TODO add your handling code here:
    }//GEN-LAST:event_tcupcakeKeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cupcake().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton border;
    private javax.swing.JButton bselcupcake;
    private javax.swing.JButton bshowall;
    private javax.swing.JButton cl;
    private javax.swing.JLabel cpic;
    private javax.swing.JComboBox cprange;
    private javax.swing.JTextField cpvalue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tcupcake;
    // End of variables declaration//GEN-END:variables

}
